################################################################################
# PLATFORM AGNOSTIC CONFIG INIT
################################################################################
# vi:sw=2:ts=2:et

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
 

# Basic Common Paths Setup #####################################################

# TODO: this should probably live in zshenv
export PATH=$HOME/bin:$HOME/.local/bin:/opt/homebrew/bin:/usr/local/bin:$PATH

if [[ -e $HOME/.cargo/env ]]; then
  source $HOME/.cargo/env
fi

if [[ -d $HOME/go/bin ]]; then
  export PATH=$HOME/go/bin:$PATH
fi

if [[ -d $HOME/.dotnet/tools ]]; then
  export PATH=$HOME/.dotnet/tools:$PATH
fi


# History ######################################################################

HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=10000
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
 

# Shell Behaviours #############################################################
setopt autocd notify
bindkey -v
bindkey ^R history-incremental-search-backward
export KEYTIMEOUT=1  # Switch to normal mode after only 10ms wait

# Setup fzf integration
export FZF_DEFAULT_COMMAND="fd --type f"

# nnn File Manager #############################################################
export NNN_BMS="l:$HOME/Code/local;r:$HOME/Code/github.com;d:$HOME/Code/github.com/craigjperry2/dotfiles/dotfiles"
export NNN_OPENER="$HOME/.config/nnn/plugins/nuke"
export NNN_PLUG='d:-_git diff;l:_git log*;m:-_less -iR $nnn*;f:_|xdg_open $nnn'
alias N="sudo -E nnn -dH"
 
n ()
{
    if [ -n $NNNLVL ] && [ "${NNNLVL:-0}" -ge 1 ]; then
        echo "nnn is already running"
        return
    fi
 
    NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
 
    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef
 
    nnn -c "$@"
 
    if [ -f "$NNN_TMPFILE" ]; then
            . "$NNN_TMPFILE"
            rm -f "$NNN_TMPFILE" > /dev/null
    fi
}


################################################################################
# MACOS SPECIFIC CONFIG
################################################################################

if [[ $OSTYPE == darwin* ]]; then

  # Apple watch & fingerprint sudo auth
  sudo() {
      unset -f sudo
      if ! grep --silent "pam_tid.so" /etc/pam.d/sudo ; then
        sudo sed -i.orig "1s/^/auth       sufficient     pam_tid.so\n/" /etc/pam.d/sudo
      fi
      sudo "$@"
  } 

  # Compilation flags
  # export ARCHFLAGS="arch x86_64"

  # Homebrew package manager for Intel and M1
  alias brewup="brew update; brew upgrade; brew cleanup; brew doctor"
  alias ibrew="arch -x86_64 /usr/local/bin/brew"
  alias ibrewup="ibrew update; ibrew upgrade; ibrew cleanup; ibrew doctor"
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  # MacOS uses 'open' rather than 'xdg_open'
  export NNN_PLUG='l:_git log*;m:-_less -iR $nnn*;f:_|open $nnn'

  alias q="QHOME=~/q rlwrap -r ~/q/m64/q"

  # Finalise fzf integration
  if [[ ! "$PATH" == */opt/homebrew/opt/fzf/bin* ]]; then
    export PATH="${PATH:+${PATH}:}/opt/homebrew/opt/fzf/bin"
  fi
  [[ $- == *i* ]] && source "/opt/homebrew/opt/fzf/shell/completion.zsh" 2> /dev/null
  source "/opt/homebrew/opt/fzf/shell/key-bindings.zsh"

  # Android Studio & React Native
  if [ -d $HOME/Library/Android/sdk ]; then
    export ANDROID_HOME=$HOME/Library/Android/sdk
    export PATH=$PATH:$ANDROID_HOME/emulator
    export PATH=$PATH:$ANDROID_HOME/tools
    export PATH=$PATH:$ANDROID_HOME/tools/bin
    export PATH=$PATH:$ANDROID_HOME/platform-tools
  fi

fi 

################################################################################
# END MACOS CONFIG
################################################################################


################################################################################
# FREEBSD SPECIFIC CONFIG
################################################################################

if [[ $OSTYPE == freebsd* ]]; then

  # Finalise fzf integration
  [[ $- == *i* ]] && source /usr/local/share/examples/fzf/shell/completion.zsh 2> /dev/null
  source "/usr/local/share/examples/fzf/shell/key-bindings.zsh"

  alias pg='ps -acdO user | fzf'

fi

################################################################################
# END FREEBSD CONFIG
################################################################################


################################################################################
# LINUX SPECIFIC CONFIG
################################################################################

if [[ $OSTYPE == linux* ]]; then

  alias q="QHOME=~/q rlwrap -r ~/q/l64/q"
  alias uu="sudo apt update && sudo apt upgrade -y"

  if [[ $WSL_DISTRO_NAME == Ubuntu* ]]; then

    # Finalise fzf integration - Ubuntu WSL2
    [[ $- == *i* ]] && source /usr/share/doc/fzf/examples/completion.zsh 2> /dev/null
    source "/usr/share/doc/fzf/examples/key-bindings.zsh"

  else

    # Finalise fzf integration - Fedora Laptop
    [[ $- == *i* ]] && source "/usr/share/zsh/site-functions/fzf" 2> /dev/null
    source "/usr/share/fzf/shell/key-bindings.zsh"

  fi

fi

################################################################################
# END LINUX CONFIG
################################################################################


################################################################################
# PLATFORM AGNOSTIC CONFIG FINISHING TOUCHES
################################################################################

zstyle ":completion:*" rehash true
zstyle :compinstall filename $HOME/.zshrc
autoload -Uz compinit
compinit
 
source "$HOME/Code/github.com/romkatv/powerlevel10k/powerlevel10k.zsh-theme"
 
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

alias c="clear"
alias ll="ls -lrt"
alias tmr="tmux new-session -ADs main"

export BAT_THEME="Solarized (light)"
alias cat='bat'

alias g="git"
alias gb="g b"
alias gca="g ca"
alias gcb="g cb"
alias gcm="g cm"
alias gco="g co"
alias gd="g d"
alias gds="g ds"
alias gl="g l"
alias gp="g p"
alias gpl="g pl"
alias gs="g s"
alias gsw="g sw"
alias gw="g w"

# Git clone https://host.com/user/repo.git (or ssh://git@...) into ~/Code/user/repo
gc() {
  repo=$1
  dest=$( echo $repo | sed -En 's#(.*@|https?://)(www\.)?([^:]*)(:|/)(.*).git#\3/\5#p' )
  git clone $repo ~/Code/${dest}
  cd ~/Code/${dest}
}

alias vi="nvim"
alias vim="nvim"
export EDITOR="nvim"

alias cdc="cd ~/Code"
alias cdl="cd ~/Code/local"
alias cdr="cd ~/Code/github.com/craigjperry2"
alias cdd="cd ~/Code/github.com/craigjperry2/dotfiles/dotfiles"

alias ec="$EDITOR $HOME/.zshrc"
alias sc="source $HOME/.zshrc"

alias ytd="yt-dlp -f 'bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4] / bv*+ba/b'"

