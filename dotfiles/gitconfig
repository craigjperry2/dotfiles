[user]
    name = Craig J Perry
    email = craigp84@gmail.com
[core]
    editor = nvim
    pager = less -r
[color]
    ui = auto
[alias]
    # TAB select which files to git add
    a = "!git status --short | fzf -m | awk '{print $2}' | xargs git add"
    ac = "!f(){ git add --all . ; git commit --all --message=\"$1\"; };f"
    cm = commit --message
    d = diff --ignore-all-space --color-words
    ds = diff --staged --ignore-all-space --color-words
    l = log --topo-order --first-parent --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    la = log --all --topo-order --first-parent --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    lg = log --all --oneline --graph --decorate
    ps = "!git push origin $(git symbolic-ref --short HEAD)"
    pl = "!git pull origin $(git symbolic-ref --short HEAD)"
    s = status --short --branch
    w = whatchanged
    ctop = !git log | grep Author | sort | uniq -c | sort -rn
    ltop = !git ls-files | xargs -n1 git blame --line-porcelain HEAD | grep '^author ' | sort | uniq -c | sort -nr
    find = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative -S'pretty' -S\"$@\" | fzf -m | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
    # edit conflicted file on merge
    edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
    # add conflicted file on merge
    add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
[pull]
	ff = only
[init]
	defaultBranch = main

